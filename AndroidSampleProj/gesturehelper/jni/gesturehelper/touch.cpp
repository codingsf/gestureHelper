#include <stdio.h>  #include <stdlib.h>  #include <unistd.h>  #include <string.h>  #include <sys/types.h>  #include <fcntl.h>  #include <errno.h>  #include <time.h>  #include <linux/input.h>  #include <jni.h>#include "touchutil.h"#include <android/log.h>#ifdef __cplusplusextern "C" {#endif/***	The first touch API for touch gesture*/JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_touchNative(JNIEnv* env,jobject thiz, jint x, jint y){	return (jint)TouchUtil::getInstance().touch(x, y); }JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_longTouchNative(JNIEnv* env,jobject thiz, jint x, jint y, jint period){	return (jint)TouchUtil::getInstance().longTouch(x, y, period); }JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_doubleClickNative(JNIEnv* env,jobject thiz, jint x, jint y){	return (jint)TouchUtil::getInstance().doubleClick(x, y); }JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_panNative(JNIEnv* env,jobject thiz, jint fromX, jint fromY, jint toX, jint toY){	return (jint)TouchUtil::getInstance().pan(fromX, fromY, toX, toY);}JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_zoomNative(JNIEnv* env,jobject thiz, jint f1StartX, jint f1StartY, jint f1EndX, jint f1EndY, 
																jint f2StartX, jint f2StartY, jint f2EndX, jint f2EndY, jint timeElipsed){	unsigned int time = (timeElipsed > 0) ? 200 : (unsigned int)timeElipsed;	return (jint)TouchUtil::getInstance().zoom(f1StartX, f1StartY, f1EndX, f1EndY, f2StartX, f2StartY, f2EndX, f2EndY, time);}JNIEXPORT jint JNICALL Java_automationutil_TouchUtil_initLib(JNIEnv* env,jobject thiz, jboolean isSystemLatererThanV4, jboolean isSupportSynMTReport){	bool param1 = false;	bool param2 = false;	if((unsigned char)isSystemLatererThanV4)	{		param1 = true;	}		if((unsigned char)isSupportSynMTReport)	{		param2 = true;	}	return (jint)TouchUtil::getInstance().init(param1, param2);}#ifdef __cplusplus}#endif